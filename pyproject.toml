[build-system]
requires=["flit_core >=3.2,<4"]
build-backend="flit_core.buildapi"

[project]
name="pytorch_frame"
version="0.1.0"
authors=[
    {name="PyG Team", email="team@pyg.org"},
]
description="Tabular Deep Learning Library for PyTorch"
readme="README.md"
requires-python=">=3.8"
keywords=[
    "deep-learning",
    "pytorch",
    "tabular-learning",
    "data-frame",
]
classifiers=[
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies=[
    "numpy",
    "pandas",
    "torch",
    "tqdm",
    "pyarrow",
]

[project.optional-dependencies]
test=[
    "pytest",
    "pytest-cov",
]
dev=[
    "pytorch_frame[test]",
    "pre-commit",
]
full=[
    "scikit-learn",
    "xgboost>=1.7.0, <2.0.0",
    "optuna>=3.0.0",
    "catboost",
]

[project.urls]
homepage="https://pyg.org"
documentation="https://pytorch-frame.readthedocs.io"
repository="https://github.com/pyg-team/pytorch-frame.git"
changelog="https://github.com/pyg-team/pytorch-frame/blob/master/CHANGELOG.md"

[tool.flit.module]
name="torch_frame"

[tool.ruff]  # https://docs.astral.sh/ruff/rules
select = [
    "D",  # pydocstyle
]
ignore = [
    "D100",  # TODO: Don't ignore "Missing docstring in public module"
    "D101",  # TODO: Don't ignore "Missing docstring in public class"
    "D102",  # TODO: Don't ignore "Missing docstring in public method"
    "D103",  # TODO: Don't ignore "Missing docstring in public function"
    "D105",  # Ignore "Missing docstring in magic method"
    "D107",  # Ignore "Missing docstring in __init__"
    "D205",  # Ignore "blank line required between summary line and description"
]
src = ["torch_frame"]
line-length = 80
indent-width = 4
target-version = "py38"

# [tool.ruff.per-files-ignores]



[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.yapf]
based_on_style = "pep8"
split_before_named_assigns = false
blank_line_before_nested_class_or_def = false

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
skip = [".gitignore", "__init__.py"]

[tool.flake8]
ignore = ["F811", "W503", "W504"]

[tool.pytest.ini_options]
addopts = [
    "--capture=no",
    "--color=yes",
    "-vv",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pass",
    "raise NotImplementedError",
]
